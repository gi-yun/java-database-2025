/*
 * JOIN
 * */

-- 개념
-- 정규화되어 나누어진 테이블의 데이터를 한꺼번에 모아서 쉽게 출력하기 위한 기법
SELECT *
  FROM EMPLOYEES e
  WHERE E.DEPARTMENT_ID= 20;

SELECT *
  FROM DEPARTMENTS d 
  WHERE d.DEPARTMENT_ID = 100;

SELECT *
  FROM EMPLOYEES e , DEPARTMENTS d
  WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID;


-- 총 데이터수가 2889개 출력
-- 카테시안 곱
SELECT *
  FROM EMPLOYEES e ,DEPARTMENTS d ;

-- 오라클 방식. 표준방식이 아님. 편하게 쿼리를 작성하라고 만든 편법
SELECT d.DEPARTMENT_NAME
  FROM EMPLOYEES e , DEPARTMENTS d 
  WHERE e.DEPARTMENT_ID =d.DEPARTMENT_ID;

-- ANSI 표준 문법
SELECT *
  FROM EMPLOYEES e 
  INNER JOIN DEPARTMENTS d 
      ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 필요컬럼만 명세
SELECT E.EMPLOYEE_ID
	 , E.FIRST_NAME || ' '|| E.LAST_NAME AS "full_name"
	 , e.EMAIL
	 , e.PHONE_NUMBER
	 , e.HIRE_DATE
	 , e.JOB_ID
	 , d.DEPARTMENT_NAME
  FROM EMPLOYEES e 
  INNER JOIN DEPARTMENTS d 
      ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 내부조인(INNER JOIN)
SELECT E.EMPLOYEE_ID
	 , E.FIRST_NAME || ' '|| E.LAST_NAME AS "full_name"
	 , e.EMAIL
	 , e.PHONE_NUMBER
	 , e.HIRE_DATE
	 , e.JOB_ID
	 , d.DEPARTMENT_NAME
	 , l.CITY
	 , l.STATE_PROVINCE
	 , l.STREET_ADDRESS
  FROM EMPLOYEES e , DEPARTMENTS d , LOCATIONS l 
  WHERE e.DEPARTMENT_ID =d.DEPARTMENT_ID
   AND l.LOCATION_ID =d.LOCATION_ID
   AND d.DEPARTMENT_ID = 60; 
--   AND d.DEPARTMENT_NAME LIKE 'IT'
   
-- 외부조인(OUTTER JOIN)

